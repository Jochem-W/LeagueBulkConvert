on:
  push: 
    branches: main
  create:
    tags:
      - v*
jobs:
  Build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Publish
        run: dotnet.exe publish -c Release -p:PublishProfile=win-x64;
      - name: Get short SHA
        if: ${{ github.event_name == 'push' }}
        run: Write-Output "name=$($Env:GITHUB_SHA.SubString(0,7))" | Out-File -FilePath $env:GITHUB_ENV -Append;
      - name: Get tag
        if: ${{ github.event_name == 'create' }}
        run: Write-Output "name=$($Env:GITHUB_REF.Split('v')[-1])" | Out-File -FilePath $env:GITHUB_ENV -Append;
      - name: Upload build artifact
        uses: actions/upload-artifact@v2.2.2
        with:
          name: LeagueBulkConvert-${{ env.name }}-win-x64
          path: LeagueBulkConvert.WPF/bin/x64/Release/net5.0-windows/publish
  Publish:
    if: ${{ github.event_name == 'create' }}
    needs: Build
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - name: Create changelog
        run: Write-Output "changelog=$(((git.exe log --format=format:'* %s' "$((git.exe tag --list)[-2])...$((git.exe tag --list)[-1])") -Join "`r`n").Replace("`n", "%0A").Replace("`r", "%0D"))" | Out-File -FilePath $env:GITHUB_ENV -Append;
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: |
            ${{ env.changelog }}
            
            LeagueBulkConvert requires the [.NET 5.0 Runtime (x64)](https://dotnet.microsoft.com/download/dotnet/5.0/runtime)
          release_name: LeagueBulkConvert ${{ github.ref }}
          tag_name: ${{ github.ref }}
      - name: Download build artifact
        uses: actions/download-artifact@v2.0.8
        with:
          path: temp
      - name: Get artifact name
        run: Write-Output "name=$((Get-ChildItem)[0].Name)" | Out-File -FilePath $env:GITHUB_ENV -Append;
        working-directory: temp
      - name: Compress archive
        run: Compress-Archive -DestinationPath ${{ env.name }}.zip -Path ${{ env.name }}\*;
        working-directory: temp
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: temp/${{ env.name }}.zip
          asset_name: ${{ env.name }}.zip
          asset_content_type: application/zip
